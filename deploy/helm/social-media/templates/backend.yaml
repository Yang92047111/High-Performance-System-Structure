apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "social-media.fullname" . }}-backend
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "social-media.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "social-media.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "social-media.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.backend.service.port }}
        env:
        - name: PORT
          value: "{{ .Values.backend.service.port }}"
        - name: DB_HOST
          value: "{{ include "social-media.fullname" . }}-postgres"
        - name: DB_PORT
          value: "{{ .Values.postgres.service.port }}"
        - name: DB_NAME
          value: "{{ .Values.config.database.name }}"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "social-media.fullname" . }}-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "social-media.fullname" . }}-secrets
              key: db-password
        - name: REDIS_HOST
          value: "{{ include "social-media.fullname" . }}-redis"
        - name: REDIS_PORT
          value: "{{ .Values.redis.service.port }}"
        - name: MINIO_ENDPOINT
          value: "{{ include "social-media.fullname" . }}-minio:{{ .Values.minio.service.apiPort }}"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "social-media.fullname" . }}-secrets
              key: minio-access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "social-media.fullname" . }}-secrets
              key: minio-secret-key
        - name: MINIO_BUCKET
          value: "{{ .Values.config.minio.bucket }}"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "social-media.fullname" . }}-secrets
              key: jwt-secret
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.backend.service.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.backend.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "social-media.fullname" . }}-backend
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "social-media.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
  - port: {{ .Values.backend.service.port }}
    targetPort: {{ .Values.backend.service.port }}
    protocol: TCP
    name: http
  selector:
    {{- include "social-media.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: backend

{{- if .Values.backend.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "social-media.fullname" . }}-backend-hpa
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "social-media.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "social-media.fullname" . }}-backend
  minReplicas: {{ .Values.backend.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.backend.autoscaling.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.backend.autoscaling.targetCPUUtilizationPercentage }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.backend.autoscaling.targetMemoryUtilizationPercentage }}
{{- end }}